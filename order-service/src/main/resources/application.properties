spring.application.name=order-service
server.port=8081

#eureka client
eureka.client.serviceUrl.defaultZone: ${EUREKA_URI:http://localhost:8761/eureka}
eureka.client.instance.preferIpAddress:true

#sql
spring.datasource.url=jdbc:postgresql://localhost:5432/order_service
spring.datasource.username=postgres
spring.datasource.password=123456

#kafka
spring.kafka.bootstrap-servers=${CLOUDKARAFKA_BROKERS:moped-01.srvs.cloudkafka.com:9094,moped-02.srvs.cloudkafka.com:9094,moped-03.srvs.cloudkafka.com:9094}
spring.kafka.properties.security.protocol=SASL_SSL
spring.kafka.properties.sasl.mechanism=SCRAM-SHA-256
spring.kafka.properties.sasl.jaas.config=org.apache.kafka.common.security.scram.ScramLoginModule required username="${CLOUDKARAFKA_USERNAME:b6ged9xg}" password="${CLOUDKARAFKA_PASSWORD:Cl1n_4AJXtESsJK1UAi48mhXKf_kI1k3}";
spring.kafka.consumer.group-id=${CLOUDKARAFKA_USERNAME:b6ged9xg}-consumers

spring.kafka.consumer.auto-offset-reset=latest
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.consumer.properties.spring.json.trusted.packages=sample.kafka

cloudkarafka.topic.payment=${CLOUDKARAFKA_USERNAME:b6ged9xg}-payment-service
